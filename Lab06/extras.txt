'''
	if contours is not None:
		contours_poly = [None]*len(contours)
		boundRect = [None]*len(contours)
		centers = [None]*len(contours)
		radius = [None]*len(contours)	

		for i,c in enumerate(contours):
			contours_poly[i] = cv2.approxPolyDP(contours[i],3,True)
			boundRect[i] = cv2.boundingRect(contours_poly[i])
			centers[i],radius[i] = cv2.minEnclosingCircle(contours_poly[i])
		
		drawing = np.zeros((green_mask.shape[0],green_mask.shape[1],3), dtype=np.uint8)
		for i in range(len(contours)):
			color = (0, 255, 0)
			cv2.rectangle(image, (int(boundRect[i][0]), int(boundRect[i][1])), \
			(int(boundRect[i][0]+boundRect[i][2]), int(boundRect[i][1]+boundRect[i][3])),color,3)
	'''
